<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RANSAC、LMEDS以及Hough变换原理</title>
      <link href="/2023/03/28/ransac/"/>
      <url>/2023/03/28/ransac/</url>
      
        <content type="html"><![CDATA[<h1 id="RANSAC算法简介"><a href="#RANSAC算法简介" class="headerlink" title="RANSAC算法简介"></a>RANSAC算法简介</h1><p>RANSAC是”RANdom SAmple Consensus”（随机采样一致）的缩写。它可以从一组包含“局外点”的观测数据集中，通过迭代方式估计数学模型的参数，它是一种不确定的算法—-它有一定的概率得出一个合理的结果；为了提高概率必须提高迭代次数。</p><blockquote><p>RANSAC基本假设</p></blockquote><ul><li>数据由<strong>局内点</strong>组成， 例如，数据的分布可以用一些模型（比如直线方程）参数来解释；</li><li><strong>局外点</strong>是不能适应该模型的参数；</li><li>除此之外的数据属于噪声；</li></ul><p>局外点产生的原因有：噪声的极值；错误的测量方法；对数据的错误假设等；</p><blockquote><p>RANSAC概述</p></blockquote><p>RANSAC算法的输入时一组观测数据，一个可以解释或者适应于观测数据的参数化模型，一些可行的参数。</p><p>RANSAC通过反复选择数据中的一组随机子集来达成目标。被选取的子集被假设为局内点，并用下述方法进行验证：</p><ul><li>有一个模型适应于假定的局内点，即所有的未知参数都能从假设的局内点计算得出；</li><li>用1中得到的模型去测试所有的其它数据，如果某个点适用于估计的模型，认为他也是局内点；</li><li>如果有足够多的点呗归类为假设的局内点，那么估计的模型就足够合理；</li><li>然后，用所有假设的局内点去重新估计模型，因为它仅仅被初始的假设局内点估计过；</li><li>最后，通过估计局内点与模型的错误率来评估模型；</li></ul><p>这个过程被重复执行固定的次数，每次产生的模型要么因为局内点太少而被抛弃，要么因为比现有的模型更好而被选用。</p><p>关于模型好坏算法实现上有两种方式：</p><ul><li>规定一个点数，达到这个点数后，算这些点与模型间的误差，找误差最小的模型。 对应下面算法一</li><li>规定一个误差，找匹配模型并小于这个误差的所有点，匹配的点最多的模型，就是最好模型。 对应下面算法二</li></ul><p>算法伪代码一：</p><pre class="line-numbers language-伪代码" data-language="伪代码"><code class="language-伪代码">输入：data ---- 一组观测数据model ---- 适应于数据的模型n ---- 适用于模型的最少数据个数k ---- 算法的迭代次数t ---- 用于决定数据是否适应于模型的阈值d ---- 判定模型是否适用于数据集的数据数目输出：best_model —— 跟数据最匹配的模型参数（如果没有找到，返回null）best_consensus_set —— 估计出模型的数据点best_error —— 跟数据相关的估计出的模型的错误iterations &#x3D; 0best_model &#x3D; nullbest_consensus_set &#x3D; nullbest_error &#x3D; 无穷大while( iterations &lt; k )    maybe_inliers &#x3D;  从数据集中随机选择n个点    maybe_model &#x3D; 适合于maybe_inliers的模型参数    consensus_set &#x3D; maybe_inliers    for (每个数据集中不属于maybe_inliers的点)        if （如果点适合于maybe_model，并且错误小于t）           将该点添加到consensus_set    if (consensus_set中的点数大于d)        已经找到了好的模型， 现在测试该模型到底有多好       better_model &#x3D; 适用于consensus_set中所有点的模型参数       this_error &#x3D;  better_model 究竟如何适合这些点的度量        if （this_error &lt; best_error）        发现比以前好的模型，保存该模型直到更好的模型出现        best_model &#x3D; better_model        best_consensus_set &#x3D; consensus_set        best_error &#x3D; this_error    iterations ++函数返回best_model, best_consensus_set, best_error<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>RANSAC算法的可能变化包括以下几种：</p><ul><li>如果发现一种足够好的模型（该模型有足够下的错误率）， 则跳出主循环，这样节约不必要的计算；设置一个错误率的阈值，小于这个值就跳出循环；</li><li>可以直接从maybe_model计算this_error，而不从consensus_set重新估计模型，这样可能会节约时间，但是可能会对噪音敏感。</li></ul><p>算法伪代码二：</p><pre class="line-numbers language-伪代码" data-language="伪代码"><code class="language-伪代码">输入：data ---- 一组观测数据numForEstimate ----- 初始模型需要的点数delta ------ 判定点符合模型的误差probability ----- 表示迭代过程中从数据集内随机选取出的点均为局内点的概率输出：best_model —— 跟数据最匹配的模型参数（如果没有找到，返回null）best_consensus_set —— 估计出模型的数据点k &#x3D; 1000&#x2F;&#x2F;设置初始值iterations &#x3D; 0best_model &#x3D; nullbest_consensus_set &#x3D; nullwhile( iterations &lt; k )    maybe_inliers &#x3D;  从数据集中随机选择numForEstimate个点    maybe_model &#x3D; 适合于maybe_inliers的模型参数，比如直线，取两个点，得直线方程    for (每个数据集中不属于maybe_inliers的点)        if （如果点适合于maybe_model，并且错误小于delta）            将该点添加到maybe_inliers    if(maybe_inliers的点数 &gt; best_consensus_set 的点数）&#x2F;&#x2F;找到更好的模型        best_model &#x3D; maybe_model        best_consensus_set  &#x3D; maybe_inliers        根据公式k&#x3D;log(1-p)&#x2F;log(1-pow(w,n))重新计算k    iterations ++函数返回best_model, best_consensus_set,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RANSAC参数"><a href="#RANSAC参数" class="headerlink" title="RANSAC参数"></a>RANSAC参数</h2><p>我们不得不根据特定的问题和数据集通过实验来确定参数t和d。然而参数k（迭代次数）可以从理论结果推断。当我们从估计模型参数时，用p表示一些迭代过程中从数据集内随机选取出的点均为局内点的概率；此时，结果模型很可能有用，因此p也表征了算法产生有用结果的概率。用w表示每次从数据集中选取一个局内点的概率，如下式所示： w &#x3D; 局内点的数目 &#x2F; 数据集的数目 通常情况下，我们事先并不知道w的值，但是可以给出一些鲁棒的值。假设估计模型需要选定n个点，wn是所有n个点均为局内点的概率；1 − wn是n个点中至少有一个点为局外点的概率，此时表明我们从数据集中估计出了一个不好的模型。 (1 − wn)k表示算法永远都不会选择到n个点均为局内点的概率，它和1-p相同。因此，<br>$$<br>1-p&#x3D;\left(1-w^n\right)^k<br>$$</p><p>其中</p><ul><li><p>p 表示置信度confidence</p></li><li><p>w 表示数据集中inlier占的比例</p></li><li><p>n 表示采样点数</p></li><li><p>k 表示需要迭代采样的最少次数</p></li><li><p>1 − wn 表示采样一次，n个点中至少有一个outlier的概率</p></li><li><p>(1 − wn)k 表示采样k次，n个点中至少有一个outlier的概率</p></li><li><p>因为p为采样k次，能有至少一次n个点都是inlier的概率</p></li><li><p>所以(1 − p)和(1 − wn)k相等时，k 为需要迭代采样的最少次数</p></li></ul><p>下面是k的解析解：</p><p>$$<br>k&#x3D;\frac{\log (1-p)}{\log \left(1-w^n\right)}<br>$$</p><p>值得注意的是，这个结果假设n个点都是独立选择的；也就是说，某个点被选定之后，它可能会被后续的迭代过程重复选定到。这种方法通常都不合理，由此推导出的k值被看作是选取不重复点的上限。例如，要从上图中的数据集寻找适合的直线，RANSAC算法通常在每次迭代时选取2个点，计算通过这两点的直线maybe_model，要求这两点必须唯一。</p><p>为了得到更可信的参数，标准偏差或它的乘积可以被加到k上。k的标准偏差定义为：</p><p>$$<br>S D(k)&#x3D;\frac{\sqrt{1-w^n}}{w^n}<br>$$</p><blockquote><p>RANSAC的函数接口 参照opencv来说主要需要3-4个参数（第四个不是必须的）</p></blockquote><ul><li>误差阈值ransacThreshold：区分inlier和outliner的依据</li><li>置信度confidence：设置之后代表RANSAC采样n次过程中会出现（至少一次）采样点数据集中的点都为内点的概率。这个值设置的太大，会增加采样次数。太小，会使结果不太理想。一般取0.95-0.99</li><li>最大采样迭代次数maxIters：为了防止一直在采样计算</li><li>最大精细迭代次数refineIters：在采样之后，选取最优解。可以增加精确优化，比如使用LM算法获得更优解。</li></ul><p>以上4个参数，有三个是经验值。其中最大采样迭代次数maxIters是可以有数值解的。</p><h2 id="RANSAC优点与缺点"><a href="#RANSAC优点与缺点" class="headerlink" title="RANSAC优点与缺点"></a>RANSAC优点与缺点</h2><p>RANSAC的优点是它能鲁棒的估计模型参数。例如，它能从包含大量局外点的数据集中估计出高精度的参数。</p><p>RANSAC的缺点是它计算参数的迭代次数没有上限；如果设置迭代次数的上限，得到的结果可能不是最优的结果，甚至可能得到错误的结果。RANSAC只有一定的概率得到可信的模型，概率与迭代次数成正比。RANSAC的另一个缺点是它要求设置跟问题相关的阀值。</p><p>RANSAC只能从特定的数据集中估计出一个模型，如果存在两个（或多个）模型，RANSAC不能找到别的模型。如果有多个模型，可以先估算出一个，然后用剩余的数据重新运算，重复这个过程，直到没有模型。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.cnblogs.com/xrwang/archive/2011/03/09/ransac-1.html">王先荣RANSAC介绍</a></p><p><a href="https://zhuanlan.zhihu.com/p/402727549">RANSAC详解，保姆级教程</a></p><p><a href="https://zhuanlan.zhihu.com/p/45532306">计算机视觉基本原理</a></p><h2 id="RANSAC应用"><a href="#RANSAC应用" class="headerlink" title="RANSAC应用"></a>RANSAC应用</h2><p>OpenCV中使用RANSAC算法实现多张图像拼接思路：</p><ul><li><p>获取图像的特征点，将每张图片的特征点保存到一个vector中；</p></li><li><p>通过特征点匹配的方法，找到每张图片的共有特征点，并将其保存到一个vector中；</p></li><li><p>通过RANSAC算法求解出拼接的变换矩阵；</p></li><li><p>根据变换矩阵对每张图片进行仿射变换；</p></li><li><p>将拼接后的图片进行裁剪；</p></li><li><p>将裁剪后的图片拼接起来，最终得到拼接后的图片。</p></li></ul><p><a href="https://blog.csdn.net/qq_39312146/article/details/129053592">OpenCV中使用RANSAC算法实现多张图像拼接</a></p><p>OpenCV中的solvePnPRansac函数和findHomography函数都具有RANSAC特性，该特性使算法对少量的错误数据鲁棒。<br>这两个函数利用RANSACPointSetRegistrator类实现RANSAC算法，但这个类并没有对外开放，因此只能通过阅读OpenCV源代码学习RANSAC算法的实现和使用。</p><p>类的实现在ptsetreg.cpp中，可通过调用precomp.hpp文件中的createRANSACPointSetRegistrator函数使用。此外，该文件还提供了createLMeDSPointSetRegistrator函数调用最小中值算法。</p><p><a href="https://blog.csdn.net/HopefulLight/article/details/78775974">在OpenCV中使用RANSAC</a></p><h1 id="LMEDS算法概述（最小中值法：Least-Median-of-Squares）"><a href="#LMEDS算法概述（最小中值法：Least-Median-of-Squares）" class="headerlink" title="LMEDS算法概述（最小中值法：Least Median of Squares）"></a>LMEDS算法概述（最小中值法：Least Median of Squares）</h1><blockquote><p>经典步骤</p></blockquote><ul><li><p>随机采样</p></li><li><p>计算模型参数</p></li><li><p>计算相对模型的点集偏差err，并求出偏差中值Med(err)</p></li><li><p>迭代2. 3.步直至获得符合阈值的最优解：Med(err)最小</p></li><li><p>精确优化模型参数（LM算法迭代优化）</p></li></ul><blockquote><p>LMedS的函数接口 参照opencv来说主要需要2-3个参数（第三个不是必须的）</p></blockquote><ul><li><p>置信度confidence：设置之后代表RANSAC采样n次过程中会出现（至少一次）采样点数据集中的点都为内点的概率，这个值设置的太大，会增加采样次数。太小，会使结果不太理想。一般取0.95-0.99</p></li><li><p>最大采样迭代次数maxIters：为了防止一直在采样计算</p></li><li><p>最大精细迭代次数refineIters：在采样之后，选取最优解。可以增加精确优化，比如使用LM算法获得更优解。</p></li></ul><p>注意： 相对于RANSAC，LMedS有一个优点：不需要指定 - 误差阈值ransacThreshold：区分inlier和outliner的依据</p><blockquote><p>RANSAC与LMEDS两者的区别</p></blockquote><p><em><strong>RANSAC的阈值在具有物理意义或者几何意义的时候比较容易确定，但是当阈值不具有这些特征的时候，就成了一个不太好调整的参数了。这时LMedS可以自适应迭代获得最优解。</strong></em></p><blockquote><p>此外，LMedS也能自适应获得inlier和outliner,公式如下：</p></blockquote><p>$$<br>\hat{\sigma}&#x3D;1.4826\left(1+\frac{5}{n-p}\right) \operatorname{med}_i \sqrt{r_i^2}<br>$$</p><p>其中</p><ul><li><p>n 表示点集的个数</p></li><li><p>p 表示计算模型一次采样的点个数</p></li><li><p>ri2  表示误差</p></li><li><p>med(ri2 ) 表示误差中值</p></li></ul><p> 筛选条件为：</p> <!-- $$w_i=\left\{\begin{array}{cc}1 & \frac{\left|r_i\right|}{\hat{\sigma}} \leq 2.5 \\ 0 & \frac{\left|r_i\right|}{\hat{\sigma}}>2.5\end{array}\right.$$ --><p><img src="/pic/%E9%80%89%E5%8C%BA_027.png"></p><p><strong>由于LMedS会需要对整个点集的err求中值，当点集很大的时候，求中值的过程会很消耗时间</strong></p><p><a href="https://blog.csdn.net/billbliss/article/details/78592216">RANSAC LMedS 详细分析</a></p><h1 id="霍夫变换-Hough"><a href="#霍夫变换-Hough" class="headerlink" title="霍夫变换(Hough)"></a>霍夫变换(Hough)</h1><p><strong>霍夫变换</strong>是一种特征提取(feature extraction)，被广泛应用在图像分析（image analysis）、计算机视觉(computer vision)以及数位影像处理(digital image processing)。霍夫变换是用来辨别找出物件中的特征，例如：线条。他的算法流程大致如下，给定一个物件、要辨别的形状的种类，算法会在参数空间(parameter space)中执行投票来决定物体的形状，而这是由累加空间(accumulator space)里的局部最大值(local maximum)来决定。</p><p>经典的霍夫变换是侦测图片中的直线，之后，霍夫变换不仅能识别直线，也能够识别任何形状，常见的有圆形、椭圆形。1981年，因为DanaH.Ballard的一篇期刊论文”Generalizing the Hough transform to detect arbitrary shapes”，让霍夫变换开始流行于计算机视觉界。</p><p><a href="https://zhuanlan.zhihu.com/p/47649796">霍夫变换-神奇的特征提取方法</a></p><p><a href="https://zhuanlan.zhihu.com/p/203292567">通俗易懂-霍夫变换原理</a></p><p><a href="https://zhuanlan.zhihu.com/p/386048978">霍夫变换及代码实现</a></p>]]></content>
      
      
      <categories>
          
          <category> Opencv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RANSAC </tag>
            
            <tag> LMEDS </tag>
            
            <tag> Hough </tag>
            
            <tag> Opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视觉及其融合惯性SLAM技术发展综述</title>
      <link href="/2023/03/27/slam/"/>
      <url>/2023/03/27/slam/</url>
      
        <content type="html"><![CDATA[<h1 id="SLAM技术"><a href="#SLAM技术" class="headerlink" title="SLAM技术"></a>SLAM技术</h1><p>同步定位与建图（Simultaneous Localization and Mapping，简称SLAM）问题可以描述为：机器人在未知环境中从一个未知位置开始移动,在移动过程中根据位置和地图进行自身定位，同时在自身定位的基础上建造增量式地图，实现机器人的自主定位和导航。</p><blockquote><p>SLAM 技术主要呈现以下 3 点发展趋势。</p></blockquote><ul><li>理论优化改进：由于应用场景需求的多样化，结合惯性、异源图像等多传感器的信息融合模式成为 SLAM 主流，促进了以紧耦合为主的信息融合理论发展，而随着大场景 SLAM 应用需求及图优化理论的推进，逐步形成了<strong>基于扩展卡尔曼滤波</strong>框架的改进滤波器优化架构，和以<strong>光束法平差（BA）</strong>为主的非线性优化架构两种研究趋势。</li><li>新型技术引入：随着<strong>深度学习</strong>技术在计算机视觉中的广泛应用，视觉 SLAM 呈现出由传统几何变换方式逐步转向结合深度学习的智能融合趋势。一方面<strong>视觉图像与语义信息</strong>的紧密联系，使得集成语义信息的视觉 SLAM 得到更多探索；另一方面为减少对传统方式依赖，利用<strong>神经网络架构</strong>替代 SLAM 的部分模块或端到端<strong>强化学习</strong>的模式得以广泛研究。</li><li>应用领域推广：视觉 SLAM 目前在<em>智能家居、自动驾驶、无人机</em>等领域得到了不同层次的应用，随着硬件性能的提升，视觉 SLAM</li></ul><p><img src="/pic/%E5%9B%BE%E7%89%871.png" alt="视觉、惯性SLAM系统框架结构"></p><p><img src="/pic/%E5%9B%BE%E7%89%872.png" alt="视觉SLAM构建地图类型"></p><p><img src="/pic/%E5%9B%BE%E7%89%873.png"></p><p><img src="/pic/%E5%9B%BE%E7%89%874.png"></p><p><img src="/pic/%E5%9B%BE%E7%89%875.png"></p><p><img src="/pic/%E5%9B%BE%E7%89%876.png"></p><p><img src="/pic/%E5%9B%BE%E7%89%877.png" alt="标准视觉SLAM Pipeline"></p><p><img src="/pic/%E5%9B%BE%E7%89%878.png" alt="极具影响力的视觉SLAM方法"></p><blockquote><p>VSLAM 常用数据集：表内的GT 是指真值的可用性</p></blockquote><p><img src="/pic/%E5%9B%BE%E7%89%879.png"></p><p><img src="/pic/%E5%9B%BE%E7%89%8710.png" alt="各种论文中用于评估的一些主流视觉SLAM数据集的实例"></p>]]></content>
      
      
      
        <tags>
            
            <tag> slam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像变换(image_transformer)</title>
      <link href="/2023/03/27/image-transformer/"/>
      <url>/2023/03/27/image-transformer/</url>
      
        <content type="html"><![CDATA[<h1 id="图像变换"><a href="#图像变换" class="headerlink" title="图像变换"></a>图像变换</h1><p>基本的图像变换有<strong>刚性变换(等距变换、欧式变换)、相似变换、仿射变换、射影变换(透视变换、投影变换)</strong></p><blockquote><p>刚性变化：只对图像进行平移与旋转，形状保持不变</p></blockquote><p>欧式变换（等距变换）保持了向量的<strong>长度和夹角</strong>，相当于我们把一个刚体原封不动地进行移动或旋转，不改变它自身的样子</p><p><img src="/pic/%E9%80%89%E5%8C%BA_020.png" alt="刚体变换矩阵"></p><blockquote><p>相似变换： 等距变换与一个均匀缩放的复合；等距变换+ 均匀缩放，类似相似三角形，比例不变</p></blockquote><p>相似变换比欧氏变换多了一个自由度，它允许物体进行均匀的放缩，其矩阵表示形式为：</p><p><img src="/pic/%E9%80%89%E5%8C%BA_021.png" alt="相似变换矩阵"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npimg <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'/hone/chy/pic/git.png'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token comment"># print(img.shape)</span><span class="token comment"># 得到相似变换的矩阵  # center：旋转中心 angle：旋转角度   scale：缩放比例</span>M <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getRotationMatrix2D<span class="token punctuation">(</span>center <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                              angle <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span>                              scale <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token comment"># 原图像按照相似矩阵进行相似变换  三个参数：原图像，相似矩阵，画布面积</span>img_rotate <span class="token operator">=</span> cv2<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">,</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_rotate<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/pic/%E9%80%89%E5%8C%BA_019.png" alt="相似变换结果"></p><blockquote><p>仿射变换：非齐次坐标下的一个非奇异线性变换与一个平移变换的复合，（即第三行是0,0,1）; 旋转+平移+缩放+切变，保持平行性</p></blockquote><p>仿射变换只要求 A 是一个可逆矩阵，而不必是正交矩阵。仿射变换也叫正交投影。经过仿射变换之后，立方体就不再是方的了，但是各个面仍是平行四边形 </p><ul><li>性质：Parallel lines are still parallel lines（不再具有保角性，具有保平行性）</li><li>三个非共线的点对（6 parameters）确定一个仿射变换。</li></ul><p><img src="/pic/%E9%80%89%E5%8C%BA_022.png" alt="仿射变换矩阵"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 3 Src(原始) Points + 3 Dst(目标) Points</span><span class="token comment"># cols：列/长  rows：行/宽</span>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'lenna.jpg'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token comment"># print(img.shape)</span>cols <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>rows <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>pt1 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>cols<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> rows<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pt2 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>cols<span class="token operator">*</span><span class="token number">0.3</span><span class="token punctuation">,</span> rows<span class="token operator">*</span><span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>cols<span class="token operator">*</span><span class="token number">0.8</span><span class="token punctuation">,</span> rows<span class="token operator">*</span><span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>cols<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span> rows<span class="token operator">*</span><span class="token number">0.9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># [[0,0], [cols, 0], [0, rows]] --> [[cols*0.3, rows*0.3], [cols*0.8, rows*0.2], [cols*0.1, rows*0.9]]</span>M <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getAffineTransform<span class="token punctuation">(</span>pt1<span class="token punctuation">,</span> pt2<span class="token punctuation">)</span>       <span class="token comment"># 仿射变换矩阵</span>dst <span class="token operator">=</span> cv2<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">,</span> <span class="token punctuation">(</span>cols<span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>dst<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/pic/%E9%80%89%E5%8C%BA_024.png" alt="仿射变换结果"></p><blockquote><p>射影变换:次坐标的一般非奇异线性变换 。射影变换可以分解为相似变换，仿射变换，射影变换的复合，不保留平行性，保留重合关系、长度的交比</p></blockquote><p><img src="/pic/%E9%80%89%E5%8C%BA_026.png" alt="射影变换矩阵"></p><p>它左上角为可逆矩阵 A，右上为平移 t，左下缩放 a^{T} 。由于采用齐坐标，当 v \neq 0 时吗我们可以对整个矩阵除于 v得到一个右下角为 1 的矩阵；否则，则得到右下角为 0 的矩阵。因此，2D 的射影变换一共有8个自由度，3D则共有15个自由度。</p><ul><li>性质：Lines are still lines（不保角，不保平行，保直线性）</li><li>四个非共线的点对（8 parameters）确定一个透视变换</li></ul><p><img src="/pic/%E9%80%89%E5%8C%BA_023.png" alt="射影变换矩阵"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npimg <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'lenna.jpg'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>pts1 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span>height<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token punctuation">,</span>height<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pts2 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>width<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span>height<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token operator">*</span><span class="token number">0.9</span><span class="token punctuation">,</span> width<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>height<span class="token operator">*</span><span class="token number">0.2</span><span class="token punctuation">,</span>height<span class="token operator">*</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token operator">*</span><span class="token number">0.7</span><span class="token punctuation">,</span>height<span class="token operator">*</span><span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>M_warp <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getPerspectiveTransform<span class="token punctuation">(</span>pts1<span class="token punctuation">,</span> pts2<span class="token punctuation">)</span>     <span class="token comment"># 单应性矩阵</span>img_warp <span class="token operator">=</span> cv2<span class="token punctuation">.</span>warpPerspective<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M_warp<span class="token punctuation">,</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_warp<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/pic/%E9%80%89%E5%8C%BA_025.png" alt="射影变换结果"></p>]]></content>
      
      
      <categories>
          
          <category> cs231A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> transformer </tag>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对极几何(Epipolar_Geometry)</title>
      <link href="/2023/03/27/epipolar-geometry/"/>
      <url>/2023/03/27/epipolar-geometry/</url>
      
        <content type="html"><![CDATA[<h1 id="对极几何基本用处"><a href="#对极几何基本用处" class="headerlink" title="对极几何基本用处"></a>对极几何基本用处</h1><h2 id="立体匹配"><a href="#立体匹配" class="headerlink" title="立体匹配"></a>立体匹配</h2><p>对于已知两视角空间位置关系的情况下，由于对极几何这个几何模型限定的约束条件，使得在立体图像对上搜索空间上的分别在两个图像中的位置只需要相应的对极线上找，把原来的二维搜搜问题，直接简化为一维搜索，双目测距就是这方面得应用之一。</p><h2 id="确定两个摄像点的相对位置与姿态问题"><a href="#确定两个摄像点的相对位置与姿态问题" class="headerlink" title="确定两个摄像点的相对位置与姿态问题"></a>确定两个摄像点的相对位置与姿态问题</h2><p>在未知视角位置的情况下，通过搜索图像对中的匹配点，可以求得两个位置和姿态得相对关系，这一点常用在机器人导航、地图得生成、三维重建等方面。</p><blockquote><p>基本概念</p></blockquote><ul><li>极点（Epipoles）：两个相机得基线与两个成像平面得交点</li><li>极线（Epipolar Lines）：空间中点在成像平面上的投影点与极点的连线</li><li>极平面（Epipolar Plane）：空间中的点与两个相机的光轴中心点所组成的平面</li></ul><blockquote><p>本质矩阵</p></blockquote><p><img src="/pic/duiji2.png"></p><blockquote><p>对极约束(E)</p></blockquote><p><img src="/pic/duiji.png"></p><blockquote><p>基础矩阵</p></blockquote><p><img src="/pic/duiji3.png"></p><blockquote><p>对极约束(F)</p></blockquote><p><img src="/pic/duiji4.png"></p>]]></content>
      
      
      <categories>
          
          <category> cs231A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对极几何 </tag>
            
            <tag> 对极约束 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 基础用法</title>
      <link href="/2023/03/26/git/"/>
      <url>/2023/03/26/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git介绍"><a href="#Git介绍" class="headerlink" title="Git介绍"></a>Git介绍</h1><p>Git是一个开源的<strong>分布式版本控制系统</strong>，可以有效、高速地处理从很小到非常大的项目版本管理。也是Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件。与常用的版本控制工具<strong>CVS, Subversion</strong>等不同，它采用了<strong>分布式版本库</strong>的方式，不必服务器端软件支持（wingeddevil注：这得分是用什么样的服务端，使用http协议或者git协议等不太一样。并且在push和pull的时候和服务器端还是有交互的。），使源代码的发布和交流极其方便。 Git 的速度很快，这对于诸如 Linux kernel 这样的大项目来说自然很重要。 Git 最为出色的是它的合并跟踪（merge tracing）能力。</p><p>Torvalds 开始着手开发 Git 是为了作为一种过渡方案来替代 BitKeeper</p><p><em>分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的Git仓库</em></p><h2 id="Git基本工作过程"><a href="#Git基本工作过程" class="headerlink" title="Git基本工作过程"></a>Git基本工作过程</h2><blockquote><p>9个常见操作，具体如下</p></blockquote><ul><li><p>1.新建项目文件夹（只做一次）</p></li><li><p>2.进入文件夹 (重要)</p></li><li><p>3.初始化仓库：git init（只做一次）</p></li><li><p>4.编码</p></li><li><p>5.添加文件信息： git add .</p></li><li><p>6.确认添加信息：git commit -m”描述信息”</p></li><li><p>7.查看详细日志信息：git log</p></li><li><p>8.查看简略日志信息：git log –oneline</p></li><li><p>9.版本回滚:git reset –hard 版本号</p></li></ul><img src="/pic/git.png"><h2 id="其他的常用操作"><a href="#其他的常用操作" class="headerlink" title="其他的常用操作"></a>其他的常用操作</h2><h3 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h3><blockquote><p>用法：git clone [url]</p></blockquote><p>该命令可用于通过指定的URL获取一个代码库。</p><h3 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h3><blockquote><p>用法：git config –global user.name “[name]”</p></blockquote><blockquote><p>用法：git config –global user.email “[email address]”</p></blockquote><p>该命令将分别设置提交代码的用户名和电子邮件地址。</p><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><blockquote><p>用法：git add [file]</p></blockquote><p>该命令可以将一个文件添加至stage(暂存区)。</p><blockquote><p>用法：git add *</p></blockquote><p>该命令可以将多个文件添加至stage(暂存区)。</p><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><blockquote><p>用法：git commit -m “[ Type in the commit message]”</p></blockquote><p>该命令可以在版本历史记录中永久记录文件。</p><blockquote><p>用法：git commit -a</p></blockquote><p>该命令将提交git add命令添加的所有文件，并提交git add命令之后更改的所有文件。 </p><h3 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h3><blockquote><p>用法：git diff</p></blockquote><p>该命令可以显示尚未添加到stage的文件的变更。</p><blockquote><p>用法：git diff –staged</p></blockquote><p>该命令可以显示添加到stage的文件与当前最新版本之间的差异。</p><blockquote><p>用法：git diff [first branch] [second branch]</p></blockquote><p>该命令可以显示两个分支之间的差异。</p><h3 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h3><blockquote><p>用法：git reset [file]</p></blockquote><p>该命令将从stage中撤出指定的文件，但可以保留文件的内容。</p><blockquote><p>用法：git reset [commit]</p></blockquote><p>该命令可以撤销指定提交之后的所有提交，并在本地保留变更。</p><h3 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h3><blockquote><p>用法：git status</p></blockquote><p>该命令将显示所有需要提交的文件。</p><h3 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h3><blockquote><p>用法：git rm [file]</p></blockquote><p>该命令将删除工作目录中的文件，并将删除动作添加到stage。</p><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><blockquote><p>用法：git log</p></blockquote><p>该命令可用于显示当前分支的版本历史记录。</p><blockquote><p>用法：git log –follow[file]</p></blockquote><p>该命令可用于显示某个文件的版本历史记录，包括文件的重命名。</p><h3 id="git-show"><a href="#git-show" class="headerlink" title="git show"></a>git show</h3><blockquote><p>用法：git show [commit]</p></blockquote><p>该命令经显示指定提交的元数据以及内容变更。</p><h3 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h3><blockquote><p>用法：git tag [commitID]</p></blockquote><p>该命令可以给指定的提交添加标签。</p><h3 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h3><blockquote><p>用法：git branch</p></blockquote><p>该命令将显示当前代码库中所有的本地分支。</p><blockquote><p>用法：git branch [branch name]</p></blockquote><p>该命令将创建一个分支。</p><blockquote><p>用法：git branch -d [branch name]</p></blockquote><p>该命令将删除指定的分支。</p><h3 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h3><blockquote><p>用法：git checkout [branch name]</p></blockquote><p>你可以通过该命令切换分支。</p><blockquote><p>用法：git checkout -b [branch name]</p></blockquote><p>你可以通过该命令创建一个分支，并切换到新分支上。</p><h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><blockquote><p>用法：git merge [branch name]</p></blockquote><p>该命令可以将指定分支的历史记录合并到当前分支。</p><h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><blockquote><p>用法：git remote add [variable name] [Remote Server Link]</p></blockquote><p>你可以通过该命令将本地的代码库连接到远程服务器。</p><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><blockquote><p>用法：git push [variable name] master</p></blockquote><p>该命令可以将主分支上提交的变更发送到远程代码库。</p><blockquote><p>用法：git push [variable name] [branch]</p></blockquote><p>该命令可以将指定分支上的提交发送到远程代码库。</p><blockquote><p>用法：git push –all [variable name]</p></blockquote><p>该命令可以将所有分支发送到远程代码库。</p><blockquote><p>用法：git pull [Repository Link]</p></blockquote><p>该命令将获取远程服务器上的变更，并合并到你的工作目录。</p><h3 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h3><blockquote><p>用法：git stash save</p></blockquote><p>该命令将临时保存所有修改的文件。</p><blockquote><p>用法：git stash pop</p></blockquote><p>该命令将恢复最近一次stash（储藏）的文件。</p><blockquote><p>用法：git stash list</p></blockquote><p>该命令将显示stash的所有变更。</p><blockquote><p>用法：git stash drop</p></blockquote><p>该命令将丢弃最近一次stash的变更。</p><h2 id="Git小游戏"><a href="#Git小游戏" class="headerlink" title="Git小游戏"></a>Git小游戏</h2><p>游戏链接为<a href="https://oschina.gitee.io/learn-git-branching/">GIt小游戏</a></p><p>推荐一个图解答案<a href="https://blog.csdn.net/GDUT_xin/article/details/125537967">答案</a></p><pre class="line-numbers language-none"><code class="language-none">---基础篇1.git commitgit commitgit commit2.git branchgit branch bugFixgit checkout bugFix3.git mergegit branch bugFixgit checkout bugFixgit commit -m “commit bugFix”git checkout maingit commit -m “commit main”git merge bugFix4.git rebasegit branch bugFixgit checkout bugFixgit commit -m “bugFix”git checkout maingit commit -m “main commit”git checkout bugFixgit rebase main高级篇1.分离HEADgit checkout c42.相对引用(^)git checkout main^git checkout c33.相对引用2(~)git branch -f main c6git checkout HEAD~1git branch -f bugFix HEAD~14.撤销变更git reset HEAD~1git chekout pushedgit revert HEAD移动提交记录1.git cherry-pickgit cherry-pick c3 c4 c72.交互式rebasegit rebase -i overHere （打开控制面板）omit c2 （点击c2）c4 c5交换位置 （拉取）杂项1.只取一个提交记录git checkout maingit cherry-pick c42.提交的技巧#1git rebase -i HEAD~2 交换2和3的位置git commit --amendgit rebase -i HEAD~2 恢复2和3的位置git checkout miangit rebase caption main3.提交的技巧#2git checkout maingit cherry-pick c2git commit --amendgit cherry-pick c34.git taggit tag v0 c1git tag v1 c2git checkout c25. git descridegit commit高级话题1.多次rebasegit rebase main bugFixgit rebase bugFix sidegit rebase side anothergit rebase another main2.两个父节点git branch bugWork main^ ^ 2^3.纠缠不清的分支git checkout onegit cherry-pick c4 c3 c2git checkout twogit cherry-pick c5 c4 c3 c2git branch -f three c2Push &amp; Pull —— Git 远程仓库！1.git clonegit clone2.远程分支git commitgit checkout o&#x2F;maingit commit3.git fetchgit fetch4.git pullgit pull5.模拟团队合作git clonegit fakeTeamwork 2git commitgit pull6.git pushgit commitgit commitgit push7.偏离的提及历史git clonegit fakeTeamworkgit commitgit pull --rebasegit push8.锁定的main（locked main）git reset --hard o&#x2F;maingit checkout -b feature c2git push origin feature关于 origin 和它的周边 —— Git 远程仓库高级操作1.推送主分支git fetchgit rebase o&#x2F;main side1git rebase side1 side2git rebase side2 side3git rebase side3 maingit push2.合并远程仓库git checkout maingit pullgit merge side1git merge side2git merge side3git push3.远程追踪git checkout -b side o&#x2F;maingit commitgit pull --rebasegit push4.git push的参数git push origin maingit push origin foo5.git push的参数2git push origin main^:foogit push origin foo:main6.git fetch的参数git fetch origin main~1:foogit fetch origin foo:maingit checkout foogit merge main7.没有source的sourcegit fetch origin :bargit push origin :foo8.git pull的参数git pull origin bar:foogit pull origin main:side---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好</title>
      <link href="/2023/03/25/chy/"/>
      <url>/2023/03/25/chy/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%205.0.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a></p><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> </p><p>QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（已满）: <a href="https://jq.qq.com/?_wv=1027&k=53q2Ayp"><code>971887688</code></a> | QQ 交流群3（推荐）: <a href="https://qm.qq.com/cgi-bin/qm/qr?k=fC1-kU-_aTn4q-JQq4GsYKr4WcKdgfGa&jump_from=webapi"><code>670694035</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li>支持中文繁简转换</li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 分类1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/23/hello-world/"/>
      <url>/2023/03/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
